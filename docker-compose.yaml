services:
  server:
    container_name: server
    build:
      context: .
      dockerfile: dockerfiles/nginx.dockerfile
    ports:
      - '8000:80'
    volumes:
      - ./src:/app
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - react
      - node
      - java
  react:
    container_name: react
    build:
      context: .
      dockerfile: dockerfiles/node.dockerfile
    volumes:
      - ./src:/app:delegated
    command: ["npm", "run", "dev", "--", "--host", "--port", "3000"]
    ports:
      - "3000:3000"
  node:
    container_name: node
    build:
      context: .
      dockerfile: dockerfiles/node.dockerfile
    command: ["node", "server.js", "--port", "4444"]
    ports:
      - "4444:4444"
  java:
    container_name: java
    build:
      context: .
      dockerfile: dockerfiles/java.dockerfile
    env_file:
      - ./env/spring.env
    ports:
      - "5000:5000"
    depends_on:
      mysql:
        condition: service_healthy

  mysql:
    container_name: mysql
    image: mysql:8.0
    env_file:
      - ./env/mysql.env
    ports:
      - "3306:3306"
    volumes:
      - ./data/mysql:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 10
  npm:
    container_name: npm
    image: node:22-slim
    working_dir: /app
    entrypoint: ["npm"]
    volumes:
      - ./src:/app
